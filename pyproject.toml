[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "pinball_map_bot"
version = "0.1.0"
description = "A Discord bot to monitor pinballmap.com for machine changes."
authors = [
    {name = "Froeht", email = "froeht@users.noreply.github.com"},
]
requires-python = ">=3.9"
dependencies = [
    "discord.py",
    "requests",
    "python-dotenv",
    "sqlalchemy>=2.0.0",
    "google-cloud-secret-manager",
    "cloud-sql-python-connector[pg8000]",
    "aiohttp",
    "colorama",
    "alembic",
    "watchdog",
]

[project.scripts]
"pinball-bot" = "src.main:main"

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-xdist",
    "pytest-cov",
    "ruff",
    "pre-commit",
    "prettier",
]

[tool.setuptools.packages.find]
where = ["src"]

# Ruff configuration - our single tool for Python code quality
# Handles ALL: linting, formatting, type checking, import sorting
# We do NOT use: mypy, black, flake8, isort
[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["sqlalchemy.orm.DeclarativeBase"]

[tool.coverage.run]
source = ["src"]
omit = [
    "src/__init__.py",
    "src/local_dev/*",
    "tests/*",
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    ".venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
sort = "Cover"

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
